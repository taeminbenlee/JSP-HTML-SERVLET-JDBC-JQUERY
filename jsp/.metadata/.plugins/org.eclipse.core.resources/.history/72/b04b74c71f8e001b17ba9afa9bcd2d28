package Controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.tomcat.util.http.fileupload.FileItemFactory;
import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;
@WebServlet("/abdogimage")
public class abdogimageController extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doImageWrite(req, resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doImageWrite(req, resp);
	}
	
	public void doImageWrite(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String fupload = "d:\\tmp"; //저장 위치
		
		int yourMaxRequestSize = 100 * 1024 * 1024;	// 파일 최대 사이즈 (1 Mb)
		int yourMaxMemorySize = 100 * 1024;			// 메모리 사이즈 (1 Kb)
		
		//form field의 데이터를 저장할 변수들 
		String myid = "";
		int phonenum = 0;
		String address = "";
		String mycontent = "";
		int danger = 0;
		
		// file명 저장
		String filename = "";
		String newfilename = "";
		
		
		boolean isMultipart = ServletFileUpload.isMultipartContent(req);
		if(isMultipart == true) {
			//filename생성
			DiskFileItemFactory factory = new DiskFileItemFactory();
			factory.setSizeThreshold(yourMaxMemorySize);
			factory.setRepository(new File(fupload));
		
			ServletFileUpload upload = new ServletFileUpload(factory); //펙토리에서의 값을 저장
			upload.setSizeMax(yourMaxRequestSize); //메모리사이즈 셋팅
			
			List<FileItem> items = null;
			try {
				items = upload.parseRequest(req);
			} catch (FileUploadException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
			
		}
	}
}
