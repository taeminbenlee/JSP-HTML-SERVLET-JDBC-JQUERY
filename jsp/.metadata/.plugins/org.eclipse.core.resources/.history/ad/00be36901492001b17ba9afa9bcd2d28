package Controller;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import Dto.BbsDto;
import Dto.abandonedDogDto;
import dao.BbsDao;
import dao.abandonedDogDao;
import util.UtilEx;

@WebServlet(urlPatterns = "/bbs")	
public class BbsController extends HttpServlet {
	
	ServletConfig mConfig = null;
	final int BUFFER_SIZE = 8192;
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doProcess( req,  resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doProcess( req,  resp);
	}
	
	@Override
	public void init(ServletConfig config) throws ServletException {
		mConfig = config;	// 업로드한 경로를 취득하기 위해서
	}
	
	protected void doProcess(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		System.out.println("BbsController doProcess!");
		
		String param = req.getParameter("param");


// TODO 커뮤니티 페이지로 이동
				if (param.equals("toBbslist")) {

					resp.sendRedirect("index.jsp?content=bbslist");

				} // end toBbslist
				
// TODO 글쓰기 탭으로 이동 
				if (param.equals("bbsWrite")) {
					System.out.println("bbsWrite 실행");
					resp.sendRedirect("index.jsp?content=bbswrite");
					
					
					
				} // end bbsWrite
		
// TODO 글쓰기 탭으로 이동 
				if (param.equals("bbsDetail")) {
					System.out.println("bbsDetail 실행");
					
					int seq = Integer.parseInt(req.getParameter("seq"));
					
					BbsDao dao = BbsDao.getInstance();
					BbsDto bbs = dao.getBbs(seq);
					
					req.setAttribute("bbs", bbs);
					req.getRequestDispatcher("index.jsp?content=bbsdetail").forward(req, resp);
					
					
				} // end bbsDetail
				
// TODO 글삭제
				if (param.equals("deleteBbs")) {
					System.out.println("deleteBbs 실행");
					
					int seq = Integer.parseInt(req.getParameter("seq"));
					
					BbsDao dao = BbsDao.getInstance();
					
					boolean b = dao.deleteBbs(seq);
					
					if(b) {
						System.out.println("삭제성공");
					}
					
					resp.sendRedirect("index.jsp");
					
				} // end deleteBbs
				
// TODO 조회수  
				if (param.equals("readcount")) {
					
				} // end readcount
				
// TODO 업데이트 (수정)
				if (param.equals("updateBbs")) {
					
				} // end updateBbs
				
// TODO 검색기능 
				if (param.equals("searchBbsList")) {
					
				} // end searchBbsList
				
				//=================================================================================================//
				//자유게시판
				
				if (param.equals("toFreeboardlist")) {
					String choice = req.getParameter("choice");
					String search = req.getParameter("search");
					String spage = req.getParameter("pageNumber");
					
					int page = 0;
					if(spage != null && !spage.equals("")) {	
						page = Integer.parseInt(spage);
					}
					if(choice == null) {
						choice = "";
					}
					if(search == null) {
						search = "";	
					}		
					
					BbsDao dao = BbsDao.getInstance();
					List<BbsDto> list = dao.getFreeBoardPagingList(choice, search, page);
					
					
					/*
					 * for (abandonedDogDto ab : list) { System.out.println(ab.toString()); }
					 */
					
					req.setAttribute("list", list);
					
					int len = dao.getAllReport(choice, search);	
					int adPage = len / 10;		// 23 -> 2
					if((len % 10) > 0){
						adPage = adPage +1;
					}
					req.setAttribute("len", len + "");
					req.setAttribute("adPage", adPage + "");
					req.setAttribute("pageNumber", page + "");
					req.setAttribute("search", search);
					req.setAttribute("choice", choice);
					req.setAttribute("content", "./자유게시판/freeBoardList");
					
					forward("index.jsp", req, resp);	
				}
				
				
				
				
				
				
	}
	public void forward(String arg, HttpServletRequest req, HttpServletResponse resp)throws ServletException, IOException {
		RequestDispatcher dispatch = req.getRequestDispatcher(arg);
		dispatch.forward(req, resp);			
	}
}

























